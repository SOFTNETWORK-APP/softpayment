syntax = "proto2";

import "scalapb/scalapb.proto";
import "google/protobuf/timestamp.proto";
import "model/payment/card.proto";
import "model/payment/document.proto";
import "model/payment/paymentUser.proto";
import "model/payment/transaction.proto";

package app.softnetwork.payment.message.PaymentEvents;

option (scalapb.options) = {
    single_file: true
    flat_package: true
    import: "app.softnetwork.persistence.message._"
    import: "app.softnetwork.persistence.model._"
    import: "app.softnetwork.protobuf.ScalaPBTypeMappers._"
    import: "app.softnetwork.serialization._"
    import: "app.softnetwork.payment.message.PaymentMessages._"
    import: "app.softnetwork.payment.model._"
    import: "app.softnetwork.payment.serialization._"
    import: "app.softnetwork.scheduler.message.SchedulerEvents.ExternalSchedulerEvent"
    preamble: "trait PaymentEvent extends ExternalSchedulerEvent"
    preamble: "sealed trait PaymentAccountEvent extends PaymentEvent"
    preamble: "sealed trait PaymentCommandEvent extends PaymentEvent"
    preamble: "trait ExternalPaymentEvent extends PaymentEvent"
    preamble: "trait PaymentEventWithCommand extends ExternalPaymentEvent {def command: Option[PaymentCommandEvent]}"
    preserve_unknown_fields: false
};

message WalletRegisteredEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string orderUuid = 1;
    required string externalUuid = 2;
    required string userId = 3;
    required string walletId = 4;
    required google.protobuf.Timestamp lastUpdated = 5 [(scalapb.field).type = "java.time.Instant"];
}

message CardPreRegisteredEvent { // deprecated replaced by PaymentMethodPreRegisteredEvent
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string orderUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required string externalUuid = 3;
    required string userId = 4;
    required string walletId = 5;
    required string cardPreRegistrationId = 6;
    required app.softnetwork.payment.model.CardOwner owner = 7;
}

message PaymentMethodPreRegisteredEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string orderUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required string externalUuid = 3;
    required string userId = 4;
    required string walletId = 5;
    required string preRegistrationId = 6;
    required app.softnetwork.payment.model.Transaction.PaymentType paymentType = 7;
    optional app.softnetwork.payment.model.CardOwner owner = 8;
}

message CardRegisteredEvent { // deprecated, replaced by PaymentMethodRegisteredEvent
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string orderUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required string externalUuid = 3;
    required app.softnetwork.payment.model.Card card = 4;
}

message PaymentMethodRegisteredEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string orderUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required string externalUuid = 3;
    oneof paymentMethod {
        app.softnetwork.payment.model.Card card = 4;
        app.softnetwork.payment.model.Paypal paypal = 5;
    }
}

message PaymentAccountUpsertedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "Updated[PaymentAccount]";
    option (scalapb.message).extends = "PaymentAccountEvent";
    required app.softnetwork.payment.model.PaymentAccount document = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
}

message BankAccountUpdatedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required string userId = 3;
    required string walletId = 4;
    required string bankAccountId = 5;
}

message MandateUpdatedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    optional string mandateId = 3;
    optional app.softnetwork.payment.model.Mandate.MandateStatus mandateStatus = 4;
    required string bankAccountId = 5;
}

message TermsOfPSPAcceptedEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required google.protobuf.Timestamp lastAcceptedTermsOfPSP = 3 [(scalapb.field).type = "java.time.Instant"];
}

message UboDeclarationUpdatedEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    optional app.softnetwork.payment.model.UboDeclaration uboDeclaration = 3;
}

message RegularUserValidatedEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required string userId = 3;
}

message RegularUserInvalidatedEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required string userId = 3;
}

message PaymentAccountStatusUpdatedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required app.softnetwork.payment.model.PaymentAccount.PaymentAccountStatus paymentAccountStatus = 3;
}

message DocumentsUpdatedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    repeated app.softnetwork.payment.model.KycDocument documents = 3;
}

message DocumentUpdatedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    required app.softnetwork.payment.model.KycDocument document = 3;
}

message BankAccountDeletedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
}

message ExternalEntityToPaymentEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentEventWithCommand";
    option (scalapb.message).extends = "ExternalEntityToPaymentEventDecorator";
    oneof wrapped {
        PayInWithPreAuthorizationCommandEvent payInWithPreAuthorization = 1;
        RefundCommandEvent refund = 2;
        PayOutCommandEvent payOut = 3;
        TransferCommandEvent transfer = 4;
        DirectDebitCommandEvent directDebit = 5;
        CreateOrUpdatePaymentAccountCommandEvent createOrUpdatePaymentAccount = 6;
        RegisterRecurringPaymentCommandEvent registerRecurringPayment = 7;
        CancelPreAuthorizationCommandEvent cancelPreAuthorization = 8;
        LoadDirectDebitTransactionCommandEvent loadDirectDebitTransaction = 9;
        CancelMandateCommandEvent cancelMandate = 10;
    }
}

message PayInWithPreAuthorizationCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    required string preAuthorizationId = 1;
    required string creditedAccount = 2;
    optional int32 debitedAmount = 3;
    optional int32 feesAmount = 4;
    optional string clientId = 5;
}

message RefundCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    required string orderUuid = 1;
    required string payInTransactionId = 2;
    required int32 refundAmount = 3;
    required string currency = 4 [default = "EUR"];
    required string reasonMessage = 5;
    required bool initializedByClient = 6;
    optional string clientId = 7;
    optional int32 feesRefundAmount = 8;
}

message PayOutCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    required string orderUuid = 1;
    required string creditedAccount = 2;
    required int32 creditedAmount = 3;
    required int32 feesAmount = 4;
    required string currency = 5 [default = "EUR"];
    optional string externalReference = 6;
    optional string clientId = 7;
}

message TransferCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    optional string orderUuid = 1;
    required string debitedAccount = 2;
    required string creditedAccount = 3;
    required int32 debitedAmount = 4;
    required int32 feesAmount = 5;
    required string currency = 6 [default = "EUR"];
    required bool payOutRequired = 7 [default = true];
    optional string externalReference = 8;
    optional string clientId = 9;
}

message DirectDebitCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    required string creditedAccount = 1;
    required int32 debitedAmount = 2;
    required int32 feesAmount = 3;
    required string currency = 4 [default = "EUR"];
    required string statementDescriptor = 5;
    optional string externalReference = 6;
    optional string clientId = 7;
}

message CreateOrUpdatePaymentAccountCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    required app.softnetwork.payment.model.PaymentAccount paymentAccount = 1;
}

message RegisterRecurringPaymentCommandEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    required string debitedAccount = 1;
    required int32 firstDebitedAmount = 2;
    required int32 firstFeesAmount = 3;
    required string currency = 4 [default = "EUR"];
    required app.softnetwork.payment.model.RecurringPayment.RecurringPaymentType type = 5 [default = CARD];
    optional google.protobuf.Timestamp startDate = 6 [(scalapb.field).type = "java.util.Date"];
    optional google.protobuf.Timestamp endDate = 7 [(scalapb.field).type = "java.util.Date"];
    optional app.softnetwork.payment.model.RecurringPayment.RecurringPaymentFrequency frequency = 8;
    optional bool fixedNextAmount = 9;
    optional int32 nextDebitedAmount = 10;
    optional int32 nextFeesAmount = 11;
    optional string clientId = 12;
}

message RecurringPaymentRegisteredEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required app.softnetwork.payment.model.RecurringPayment recurringPayment = 2;
}

message CancelPreAuthorizationCommandEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    required string orderUuid = 1;
    required string cardPreAuthorizedTransactionId = 2;
    optional string clientId = 3;
}

message LoadDirectDebitTransactionCommandEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    required string directDebitTransactionId = 1;
    optional string clientId = 2;
}

message PaymentAccountCreatedOrUpdatedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
    optional string profile = 3;
}

message CancelMandateCommandEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentCommandEvent";
    required string externalUuid = 1;
    optional string clientId = 2;
}

message MandateCancelationFailedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "PaymentAccountEvent";
    option (scalapb.message).extends = "BroadcastEvent";
    required string externalUuid = 1;
    required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
}
